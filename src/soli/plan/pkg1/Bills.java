/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package soli.plan.pkg1;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 * @author DELL
 */
public class Bills extends javax.swing.JFrame {

    /**
     * Creates new form Bills
     */
    ArrayList<Data_Serves_Bills> bills = new ArrayList<>();
    ArrayList<Data_Serves_Bills> get_serves_bills = new ArrayList<>();
    ArrayList<Data_Bills> get_Bills = new ArrayList<>();
    ArrayList<Data_Items_Card> list1 = new ArrayList<>();
    ArrayList<Data_current_goods> current_goods = new ArrayList<>();
    static Connection connection;
    static Statement statement;
    static PreparedStatement preparedStatement;
    int i = 0;
    double all_tot = 0.0, bHeight = 0.0;
    String data = "";
    int cnt = 0, start = 0;
    int Consumer_profits = 0, Wholesale_profits = 0, net_profit = 0;
    int Current_Consumer_profits = 0, Current_Wholesale_profits = 0;
    boolean flag_lock = false, NEww = false;

    public Bills() {
        initComponents();
        this.setResizable(false);
        this.setLocation(50, 50);
        this.setDefaultCloseOperation(Bills.DO_NOTHING_ON_CLOSE);
        get_items();
        get_bills();
        get_serves_bills(0);
        get_Current_goods();
        if (Suppliers_Customers.stte.equals("عميل")) {
            jLabel6.setText("OUT");
            jPanel1.setBackground(new Color(153, 153, 255));
            jTable1.setBackground(new Color(153, 153, 255));
            jPanel2.setBackground(new Color(65, 105, 225));
            jPanel3.setBackground(new Color(65, 105, 225));
            jPanel4.setBackground(new Color(65, 105, 225));
            jLabel3.setText("الي حساب :");
            price.disable();
            String[] s = new String[list1.size() + 1];
            s[0] = "";
            for (int i = 0; i < list1.size(); i++) {
                s[i + 1] = list1.get(i).getC_name().toString();
            }
            item.setModel(new javax.swing.DefaultComboBoxModel<>(s));
        } else {
            item.setEditable(true);
            nots.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"توريد", "مرتجع"}));
        }
        name.setText(Suppliers_Customers.person);
        if (Running.lock6.equals("1")) {
            lock.setIcon(new ImageIcon(getClass().getResource("/soli/plan/pkg1/download13.png")));
            flag_lock = true;
            item.setEnabled(false);
            number.setEnabled(false);
            price.setEnabled(false);
            discount.setEnabled(false);
            all_discount.setEnabled(false);
            nots.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        remove = new javax.swing.JLabel();
        code = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        item = new javax.swing.JComboBox<>();
        number = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        discount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        year = new javax.swing.JTextField();
        month = new javax.swing.JTextField();
        day = new javax.swing.JTextField();
        nots = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        number_bill = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        all_total = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        all_discount = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        all_total_after_discount = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        next = new javax.swing.JButton();
        prev = new javax.swing.JButton();
        New = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        lock = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        count = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/exit.jpg"))); // NOI18N
        remove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeMouseClicked(evt);
            }
        });

        code.setEditable(false);
        code.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        code.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        code.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        code.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jTable1.setBackground(new java.awt.Color(255, 255, 204));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "الاجمالي", "حصم", "السعر", "العدد", "الصنف", "الكود", "م"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(35);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(4).setMinWidth(270);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(270);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(270);
            jTable1.getColumnModel().getColumn(5).setMinWidth(150);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(6).setMinWidth(40);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(40);
        }

        item.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        item.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemActionPerformed(evt);
            }
        });

        number.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        number.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        number.setText("0");
        number.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        number.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberKeyReleased(evt);
            }
        });

        price.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        price.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        price.setText("0");
        price.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        price.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        discount.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        discount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        discount.setText("0");
        discount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        discount.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountKeyReleased(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/percentage.png"))); // NOI18N

        total.setEditable(false);
        total.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        total.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        total.setText("0");
        total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        total.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(240, 128, 128));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("من حساب :");

        name.setEditable(false);
        name.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        name.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("بتاريخ :");

        year.setEditable(false);
        year.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        year.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        month.setEditable(false);
        month.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        month.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });

        day.setEditable(false);
        day.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        day.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        nots.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        nots.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "بيع جملة", "بيع مستهلك", "مرتجع" }));
        nots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notsActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("رقم الفاتورة :");

        number_bill.setEditable(false);
        number_bill.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        number_bill.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        number_bill.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("IN");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(number_bill, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(nots, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(name, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(nots, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(number_bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(240, 128, 128));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("ضريبة منبع :");

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setText("تضاف");

        jTextField8.setEditable(false);
        jTextField8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField8.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("ضريبة مبيعات :");

        jTextField9.setEditable(false);
        jTextField9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField9.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField8)
                            .addComponent(jTextField9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(240, 128, 128));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("الاجمالي :");

        all_total.setEditable(false);
        all_total.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        all_total.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        all_total.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("خصم عام :");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/percentage.png"))); // NOI18N

        all_discount.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        all_discount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        all_discount.setText("0");
        all_discount.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        all_discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                all_discountActionPerformed(evt);
            }
        });
        all_discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                all_discountKeyReleased(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("بعد الحصم و الضرائب :");

        all_total_after_discount.setEditable(false);
        all_total_after_discount.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        all_total_after_discount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        all_total_after_discount.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(all_discount))
                            .addComponent(all_total))
                        .addGap(109, 109, 109)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(all_total_after_discount, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(all_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel10))
                    .addComponent(all_discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(all_total_after_discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        next.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/download8.png"))); // NOI18N
        next.setText("التالي");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        prev.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/download9.png"))); // NOI18N
        prev.setText("السابق");
        prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevActionPerformed(evt);
            }
        });

        New.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/download10.png"))); // NOI18N
        New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewActionPerformed(evt);
            }
        });

        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/download11.png"))); // NOI18N
        delete.setToolTipText("");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        lock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/download12.png"))); // NOI18N
        lock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/download15.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        count.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        count.setForeground(new java.awt.Color(255, 255, 255));
        count.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        count.setText("jLabel5");
        count.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/User.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/soli/plan/pkg1/download 4.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lock, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(New, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prev, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(New, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lock, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(number)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(item, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remove))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(remove, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(discount, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(price, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(number, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(item, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(code, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(total))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void all_discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_all_discountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_all_discountActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        if (cnt + 1 < get_Bills.size()) {
            Wholesale_profits = 0;
            Consumer_profits = 0;
            net_profit = 0;
            get_serves_bills(++cnt);
        }
    }//GEN-LAST:event_nextActionPerformed

    private void prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevActionPerformed

        if (cnt - 1 >= 0) {
            Wholesale_profits = 0;
            Consumer_profits = 0;
            net_profit = 0;
            get_serves_bills(--cnt);
        }
    }//GEN-LAST:event_prevActionPerformed

    private void NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewActionPerformed
        NEww = true;
        SimpleDateFormat years = new SimpleDateFormat("YYYY");
        SimpleDateFormat mon = new SimpleDateFormat("MM");
        SimpleDateFormat days = new SimpleDateFormat("dd");
        Date date = new Date();
        year.setText(years.format(date));
        data += years.format(date) + "/";
        this.month.setText(mon.format(date));
        data += mon.format(date) + "/";
        this.day.setText(days.format(date));
        data += days.format(date);
        all_discount.setText("0");
        Wholesale_profits = 0;
        Consumer_profits = 0;
        net_profit = 0;
        all_tot = 0.0;

        table();
        if (Suppliers_Customers.stte.equals("مورد")) {
            code.setText(start + 1 + "");
        }
        if (number_bill.getText().equals("0")) {
            number_bill.setText("1");
        } else {
            number_bill.setText(get_Bills.size() + 1 + "");
        }
        all_total.setText("0");
        all_discount.setText("0");
        all_total_after_discount.setText("0");
        i = 0;
    }//GEN-LAST:event_NewActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        NEww = false;
        table();
        get_serves_bills(0);
    }//GEN-LAST:event_deleteActionPerformed

    private void lockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockActionPerformed

        Security security = new Security();
        try {
            connection = security.coneect();
            statement = connection.createStatement();
            if (flag_lock) {
                lock.setIcon(new ImageIcon(getClass().getResource("/soli/plan/pkg1/download12.png")));
                flag_lock = false;
                Running.lock6 = "0";
                item.setEnabled(true);
                number.setEnabled(true);
                price.setEnabled(true);
                discount.setEnabled(true);
                all_discount.setEnabled(true);
                nots.setEnabled(true);
            } else {
                lock.setIcon(new ImageIcon(getClass().getResource("/soli/plan/pkg1/download13.png")));
                flag_lock = true;
                Running.lock6 = "1";
                item.setEnabled(false);
                number.setEnabled(false);
                price.setEnabled(false);
                discount.setEnabled(false);
                all_discount.setEnabled(false);
                nots.setEnabled(false);
            }
            String quere = "update years set Y_lock6 = '" + Running.lock6 + "' where Y_id = '" + Running.Y_id + "'";
            statement.execute(quere);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                connection.close();
                statement.close();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_lockActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new Suppliers_Customers().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        double current_profits = 0.0;
        if (nots.getSelectedIndex() == 0) {
            current_profits = Wholesale_profits - net_profit;
        } else {
            current_profits = Consumer_profits - net_profit;
        }
        final double f = current_profits;
        final double a = Wholesale_profits - net_profit;
        final double b = Consumer_profits - net_profit;
        Runnable r = () -> {
            String html = "<html><body width='%1s'><h1>تقرير ربحية الفاتورة الحالية حسب</h1>"
                    + "<h2>عند البيع بالسعر المكتوب في الفاتورة : " + f + "</h2>"
                    + "<h3>---------------------------------------------------------------------</h3>"
                    + "<h2> عند البيع بسعر الجملة كما في كارتة الأصناف : " + a + "</h2>"
                    + "<h2> عند البيع بسعر المستهلك كما في كارتة الأصناف : " + b + "</h2>";
            // change to alter the width
            int w = 350;

            JOptionPane.showMessageDialog(this, String.format(html, w, w));
        };
        SwingUtilities.invokeLater(r);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void removeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeMouseClicked
        code.setText("");
        if (Suppliers_Customers.stte.equals("عميل")) {
            item.setSelectedIndex(0);
        }
        number.setText("0");
        price.setText("0");
        discount.setText("0");
        total.setText("0");
        all_discount.setText("0");
    }//GEN-LAST:event_removeMouseClicked

    private void itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemActionPerformed
        String s = item.getSelectedItem().toString();
        for (int i = 0; i < list1.size(); i++) {
            if (s.equals(list1.get(i).getC_name())) {
                code.setText(list1.get(i).getC_id().toString());
                for (int x = 0; x < current_goods.size(); x++) {
                    if (s.equals(current_goods.get(x).name_items)) {
                        number.setText(current_goods.get(x).Current_items);
                        break;
                    }
                }
                if (nots.getSelectedItem().equals("بيع جملة")) {
                    price.setEnabled(false);
                    price.setText(list1.get(i).getC_wholesale_price());
                } else if (nots.getSelectedItem().equals("بيع مستهلك")) {
                    price.setText(list1.get(i).getC_Consumer_selling_price());
                    price.setEnabled(false);
                } else if (nots.getSelectedItem().equals("مرتجع")) {
                    price.setEnabled(true);
                }
                break;
            }
        }
    }//GEN-LAST:event_itemActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (item.getSelectedIndex() != 0 && !number.getText().equals("0") && !item.getSelectedItem().equals("")) {
            DefaultTableModel mm = (DefaultTableModel) jTable1.getModel();
            Object[] col = new Object[7];
            col[6] = ++i;
            col[5] = code.getText();
            col[4] = item.getSelectedItem();
            col[3] = number.getText();
            col[2] = price.getText();
            col[1] = discount.getText();
            col[0] = total.getText();
            mm.addRow(col);
            Data_Serves_Bills b = new Data_Serves_Bills(code.getText().toString(), number.getText().toString(), item.getSelectedItem().toString(), data, Suppliers_Customers.person, price.getText().toString(), discount.getText().toString(), total.getText().toString());
            bills.add(b);
            all_tot += (Double.parseDouble(total.getText().toString()));
            all_total.setText(all_tot + "");
            all_total_after_discount.setText(all_total.getText());
            if (Suppliers_Customers.stte.equals("مورد")) {
                code.setText(Integer.parseInt(code.getText().toString()) + 1 + "");
            }
        }
        if (Suppliers_Customers.stte.equals("عميل")) {
            for (int i = 0; i < list1.size(); i++) {
                if (list1.get(i).getC_name().equals(item.getSelectedItem().toString())) {
                    double x1 = (Double.parseDouble(list1.get(i).getC_wholesale_price().toString())) * (Double.parseDouble(number.getText().toString()));
                    x1 -= ((x1 / 100.0) * (Double.parseDouble(discount.getText())));
                    Wholesale_profits += x1;
                    Current_Wholesale_profits = Wholesale_profits;

                    x1 = (Double.parseDouble(list1.get(i).getC_Consumer_selling_price().toString())) * (Double.parseDouble(number.getText().toString()));
                    x1 -= ((x1 / 100.0) * (Double.parseDouble(discount.getText().toString())));
                    Consumer_profits += x1;
                    Current_Consumer_profits = Consumer_profits;

                    x1 = (Double.parseDouble(list1.get(i).getC_supply_price().toString())) * (Double.parseDouble(number.getText().toString()));
                    net_profit += x1;
                    break;
                }
            }
            code.setText("");
            item.setSelectedIndex(0);
        } else {
            item.setSelectedItem("");
        }
        number.setText("0");
        price.setText("0");
        discount.setText("0");
        total.setText("0");
    }//GEN-LAST:event_jTable1MouseClicked

    private void numberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberKeyReleased
        double num = Double.parseDouble(number.getText().toString());
        double pri = Double.parseDouble((price.getText().toString()));
        total.setText((num * pri) + "");
    }//GEN-LAST:event_numberKeyReleased

    private void discountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyReleased
        double dis = Double.parseDouble(discount.getText().toString());
        double num = Double.parseDouble(number.getText().toString());
        double pri = Double.parseDouble((price.getText().toString()));
        total.setText((num * pri) - (((num * pri) / 100.0) * dis) + "");
    }//GEN-LAST:event_discountKeyReleased

    private void all_discountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_all_discountKeyReleased
        double dis = Double.parseDouble(all_discount.getText().toString());
        double tot = Double.parseDouble(all_total.getText().toString());
        Wholesale_profits = Current_Wholesale_profits;
        Consumer_profits = Current_Consumer_profits;
        all_total_after_discount.setText(tot - ((tot / 100.0) * dis) + "");
        Wholesale_profits -= (Wholesale_profits / 100.0) * dis;
        Consumer_profits -= (Consumer_profits / 100.0) * dis;
    }//GEN-LAST:event_all_discountKeyReleased

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (Running.lock6.equals("0")) {
            if (NEww) {
                Security security = new Security();
                try {
                    connection = security.coneect();
                    statement = connection.createStatement();
                    String quere = "insert into bills set state = '" + Suppliers_Customers.stte + "', name = '" + Suppliers_Customers.person + "', data = '" + data + "', total = '" + all_total.getText().toString() + "',Total_after_discount = '" + all_discount.getText().toString() + "',nots = '" + nots.getSelectedItem().toString() + "', Y_id = '" + Running.Y_id + "' ";
                    statement.execute(quere);
                    for (int i = 0; i < bills.size(); i++) {
                        current_goods.clear();
                        preparedStatement = connection.prepareStatement("select * from current_goods where name_items = '" + bills.get(i).item + "' and Y_id = '" + Running.Y_id + "'");
                        ResultSet set = preparedStatement.executeQuery();
                        while (set.next()) {
                            Data_current_goods d = new Data_current_goods(set.getString("name_items"), set.getString("In_items"), set.getString("Out_items"), set.getString("Current_items"), set.getString("price"), set.getString("total"));
                            current_goods.add(d);
                        }
                        quere = "insert into serves_bills set code = '" + bills.get(i).code + "', item = '" + bills.get(i).item + "',num = '" + bills.get(i).num + "',price = '" + bills.get(i).price + "', discount = '" + bills.get(i).discount + "', total = '" + bills.get(i).total + "', data = '" + bills.get(i).date + "',name = '" + bills.get(i).name + "', Y_id = '" + Running.Y_id + "'";
                        statement.execute(quere);
                        if (Suppliers_Customers.stte.equals("مورد")) {
                            if (!nots.getSelectedItem().equals("مرتجع")) {
                                quere = "insert into incoming_goods set date = '" + data + "',name_person = '" + Suppliers_Customers.person + "', number_bill = '" + number_bill.getText().toString() + "', state = '" + nots.getSelectedItem().toString() + "', name_items = '" + bills.get(i).item + "', number_item = '" + bills.get(i).num + "', price = '" + bills.get(i).price + "', discount = '" + bills.get(i).discount + "', total = '" + bills.get(i).total + "', Y_id = '" + Running.Y_id + "'";
                                statement.execute(quere);
                                if (!current_goods.get(0).name_items.isEmpty()) {
                                    double in = Double.parseDouble(current_goods.get(0).In_items) + Double.parseDouble(bills.get(i).num);
                                    double current = Double.parseDouble(current_goods.get(0).Current_items) + Double.parseDouble(bills.get(i).num);
                                    double total = current * Double.parseDouble(current_goods.get(0).price);
                                    quere = "update current_goods set In_items = '" + in + "', Current_items = '" + current + "' , total = '" + total + "'where name_items = '" + bills.get(i).item + "' and Y_id = '" + Running.Y_id + "'";
                                    statement.execute(quere);
                                } else {
                                    quere = "insert current_goods set name_items = '" + bills.get(i).item + "', In_items = '" + bills.get(i).num + "', Out_items = 0 , Current_items = '" + bills.get(i).num + "', price = '" + bills.get(i).price + "', total = '" + bills.get(i).total + "', Y_id = '" + Running.Y_id + "'";
                                    statement.execute(quere);
                                }
                            } else {
                                quere = "insert into outcoming_goods set date = '" + data + "', name_person = '" + Suppliers_Customers.person + "', number_bill = '" + number_bill.getText().toString() + "',state = '" + nots.getSelectedItem().toString() + "', name_items = '" + bills.get(i).item + "', number_item = '" + bills.get(i).num + "', price = '" + bills.get(i).price + "', discount = '" + bills.get(i).discount + "', total = '" + bills.get(i).total + "',Y_id = '" + Running.Y_id + "'";
                                statement.execute(quere);
                                double out = Double.parseDouble(current_goods.get(0).Out_items) + Double.parseDouble(bills.get(i).num);
                                double current = Double.parseDouble(current_goods.get(0).Current_items) + Double.parseDouble(bills.get(i).num);
                                double total = current * Double.parseDouble(current_goods.get(0).price);
                                quere = "update current_goods set Out_items = '" + out + "', Current_items = '" + current + "' , total = '" + total + "'where name_items = '" + bills.get(i).item + "' and Y_id = '" + Running.Y_id + "'";
                                statement.execute(quere);
                            }
                        } else {
                            if (!nots.getSelectedItem().equals("مرتجع")) {
                                quere = "insert into outcoming_goods set date = '" + data + "', name_person = '" + Suppliers_Customers.person + "', number_bill = '" + number_bill.getText().toString() + "', state = '" + nots.getSelectedItem().toString() + "', name_items = '" + bills.get(i).item + "', number_item = '" + bills.get(i).num + "', price = '" + bills.get(i).price + "', discount = '" + bills.get(i).discount + "', total = '" + bills.get(i).total + "',Y_id = '" + Running.Y_id + "'";
                                statement.execute(quere);
                                double out = Double.parseDouble(current_goods.get(0).Out_items) + Double.parseDouble(bills.get(i).num);
                                double current = Double.parseDouble(current_goods.get(0).Current_items) - Double.parseDouble(bills.get(i).num);
                                double total = current * Double.parseDouble(current_goods.get(0).price);
                                quere = "update current_goods set Out_items = '" + out + "', Current_items = '" + current + "' , total = '" + total + "'where name_items = '" + bills.get(i).item + "' and Y_id = '" + Running.Y_id + "'";
                                statement.execute(quere);
                            } else {
                                quere = "insert into incoming_goods set date = '" + data + "', name_person = '" + Suppliers_Customers.person + "', number_bill = '" + number_bill.getText().toString() + "', state = '" + nots.getSelectedItem().toString() + "', name_items = '" + bills.get(i).item + "', number_item = '" + bills.get(i).num + "', price = '" + bills.get(i).price + "', discount = '" + bills.get(i).discount + "', total = '" + bills.get(i).total + "',Y_id = '" + Running.Y_id + "'";
                                statement.execute(quere);
                                double in = Double.parseDouble(current_goods.get(0).In_items) + Double.parseDouble(bills.get(i).num);
                                double current = Double.parseDouble(current_goods.get(0).Current_items) + Double.parseDouble(bills.get(i).num);
                                double total = current * Double.parseDouble(current_goods.get(0).price);
                                quere = "update current_goods set In_items = '" + in + "', Current_items = '" + current + "', total = '" + total + "' where name_items = '" + bills.get(i).item + "' and Y_id = '" + Running.Y_id + "'";
                                statement.execute(quere);
                            }
                        }

                    }
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                } finally {
                    try {
                        connection.close();
                        statement.close();
                        preparedStatement.close();
                    } catch (Exception e) {
                        System.out.println(e.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void notsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notsActionPerformed
        if (nots.getSelectedItem().equals("مرتجع")) {
            String[] s = new String[list1.size() + 1];
            s[0] = "";
            for (int i = 0; i < list1.size(); i++) {
                s[i + 1] = list1.get(i).getC_name().toString();
            }
            item.setModel(new javax.swing.DefaultComboBoxModel<>(s));
            item.setEditable(false);
        }
        else if(nots.getSelectedItem().equals("توريد")){
             item.setModel(new javax.swing.DefaultComboBoxModel<>());
        }
    }//GEN-LAST:event_notsActionPerformed

    public void get_items() {
        Security security = new Security();
        try {
            connection = security.coneect();
            preparedStatement = connection.prepareStatement("SELECT * FROM categories WHERE Y_id = '" + Running.Y_id + "' order by C_name");
            ResultSet set = preparedStatement.executeQuery();
            while (set.next()) {
                Data_Items_Card d = new Data_Items_Card(set.getString("C_id"), set.getString("C_name"), set.getString("C_supply_price"), set.getString("C_wholesale_price"), set.getString("C_Consumer_selling_price"));
                list1.add(d);
                start = Math.max(Integer.parseInt(list1.get(list1.size() - 1).getC_id()), start);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                connection.close();
                preparedStatement.close();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }

    public void get_bills() {
        Security security = new Security();
        try {
            connection = security.coneect();
            preparedStatement = connection.prepareStatement("SELECT * FROM bills WHERE state = '" + Suppliers_Customers.stte + "' and name = '" + Suppliers_Customers.person + "' and Y_id = '" + Running.Y_id + "'");
            ResultSet set = preparedStatement.executeQuery();
            while (set.next()) {
                Data_Bills b = new Data_Bills(set.getString("state"), set.getString("name"), set.getString("data"), set.getString("total"), set.getString("Total_after_discount"), set.getString("nots"));
                get_Bills.add(b);
            }
            if (get_Bills.size() == 0) {
                number_bill.setText("0");
                count.setText("0 / 0");
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                connection.close();
                preparedStatement.close();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }

    public void get_serves_bills(int index) {
        table();
        Security security = new Security();
        try {
            connection = security.coneect();
            preparedStatement = connection.prepareStatement("select * from serves_bills where name = '" + get_Bills.get(index).name + "' and data = '" + get_Bills.get(index).date + "' and Y_id = '" + Running.Y_id + "'");
            ResultSet set = preparedStatement.executeQuery();
            while (set.next()) {
                Data_Serves_Bills b = new Data_Serves_Bills(set.getString("code"), set.getString("num"), set.getString("item"), set.getString("data"), set.getString("name"), set.getString("price"), set.getString("discount"), set.getString("total"));
                get_serves_bills.add(b);
            }
            DefaultTableModel mm = (DefaultTableModel) jTable1.getModel();
            Object[] col = new Object[7];
            double x1 = 0.0, x2 = 0.0, x3 = 0.0;
            for (int i = 0; i < get_serves_bills.size(); i++) {
                col[6] = i + 1;
                col[5] = get_serves_bills.get(i).code;
                col[4] = get_serves_bills.get(i).item;
                col[3] = get_serves_bills.get(i).num;
                col[2] = get_serves_bills.get(i).price;
                col[1] = get_serves_bills.get(i).discount;
                col[0] = get_serves_bills.get(i).total;
                for (int x = 0; x < list1.size(); x++) {
                    if (get_serves_bills.get(i).item.equals(list1.get(x).getC_name())) {
                        x1 = (Double.parseDouble(list1.get(x).getC_wholesale_price().toString())) * (Double.parseDouble(get_serves_bills.get(i).num));
                        x1 -= ((x1 / 100.0) * (Double.parseDouble(get_serves_bills.get(i).discount)));
                        Wholesale_profits += x1;

                        x2 = (Double.parseDouble(list1.get(x).getC_Consumer_selling_price().toString())) * (Double.parseDouble(get_serves_bills.get(i).num));
                        x2 -= ((x2 / 100.0) * (Double.parseDouble(get_serves_bills.get(i).discount)));
                        Consumer_profits += x2;

                        x3 = (Double.parseDouble(list1.get(x).getC_supply_price().toString())) * (Double.parseDouble(get_serves_bills.get(i).num));
                        net_profit += x3;
                        break;
                    }
                }
                mm.addRow(col);
            }
            number_bill.setText(index + 1 + "");
            count.setText((index + 1) + " / " + get_Bills.size());
            all_total.setText(get_Bills.get(index).total);
            all_discount.setText(get_Bills.get(index).all_discount);
            double d = Double.parseDouble(all_total.getText().toString()) - ((Double.parseDouble(all_total.getText().toString())) / 100.0 * (Double.parseDouble(all_discount.getText().toString())));
            all_total_after_discount.setText(d + "");
            Wholesale_profits -= ((Wholesale_profits / 100.0) * (Double.parseDouble(all_discount.getText().toString())));
            Consumer_profits -= ((Consumer_profits / 100.0) * (Double.parseDouble(all_discount.getText().toString())));
            year.setText(get_Bills.get(index).date.substring(0, 4));
            month.setText(get_Bills.get(index).date.substring(5, 7));
            day.setText(get_Bills.get(index).date.substring(8, 10));
            nots.setSelectedItem(get_Bills.get(index).nots);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                connection.close();
                preparedStatement.close();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }

    public void table() {
        get_serves_bills.clear();
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {null, null, null, null, null, null, null}
                },
                new String[]{
                    "الاجمالي", "حصم", "السعر", "العدد", "الصنف", "الكود", "م"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(4).setMinWidth(270);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(270);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(270);
            jTable1.getColumnModel().getColumn(5).setMinWidth(150);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(6).setMinWidth(40);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(40);
        }
    }

    public void get_Current_goods() {
        current_goods.clear();
        Security security = new Security();
        try {
            connection = security.coneect();
            preparedStatement = connection.prepareStatement("SELECT * FROM current_goods WHERE Y_id = '" + Running.Y_id + "' order by name_items");
            ResultSet set = preparedStatement.executeQuery();
            while (set.next()) {
                Data_current_goods d = new Data_current_goods(set.getString("name_items"), set.getString("In_items"), set.getString("Out_items"), set.getString("Current_items"), set.getString("price"), set.getString("total"));
                current_goods.add(d);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            try {
                connection.close();
                preparedStatement.close();
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bills.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bills().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton New;
    private javax.swing.JTextField all_discount;
    private javax.swing.JTextField all_total;
    private javax.swing.JTextField all_total_after_discount;
    private javax.swing.JTextField code;
    private javax.swing.JLabel count;
    private javax.swing.JTextField day;
    private javax.swing.JButton delete;
    private javax.swing.JTextField discount;
    private javax.swing.JComboBox<String> item;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JButton lock;
    private javax.swing.JTextField month;
    private javax.swing.JTextField name;
    private javax.swing.JButton next;
    private javax.swing.JComboBox<String> nots;
    private javax.swing.JTextField number;
    private javax.swing.JTextField number_bill;
    private javax.swing.JButton prev;
    private javax.swing.JTextField price;
    private javax.swing.JLabel remove;
    private javax.swing.JTextField total;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
